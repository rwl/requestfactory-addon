package {{=packageName}};

import {{=topLevelPackage}}.application.AndroidApplication;

import android.app.Activity;
import android.os.Bundle;
import android.support.v4.app.ListFragment;
import android.view.View;
import android.widget.AbsListView.OnScrollListener;
import android.widget.ListView;
import android.util.Log;

{{#imports}}import {{=import}};
{{/imports}}

public class {{=className}} extends ListFragment {

    public interface Callback {
        public void onItemSelected(int position);
    }

    private static final String TAG = "{{=className}}";

    private static final String STATE_ACTIVATED_POSITION = "activated_position";

    private Callback callback;

    private OnScrollListener onScrollListener;

    private int activatedPosition = ListView.INVALID_POSITION;

    public {{=className}}() {
    }

    @Override
    public void onCreate(final Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        final AndroidApplication application = (AndroidApplication) getActivity().getApplication();
        setListAdapter(application.getRecorderProxyAdapter(getActivity()));
    }

    @Override
    public void onViewCreated(final View view, final Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        if (savedInstanceState != null && savedInstanceState.containsKey(STATE_ACTIVATED_POSITION)) {
            setActivatedPosition(savedInstanceState.getInt(STATE_ACTIVATED_POSITION));
        }
        getListView().setOnScrollListener(onScrollListener);
    }

    @Override
    public void onAttach(final Activity activity) {
        super.onAttach(activity);

        if (!(activity instanceof Callback)) {
            Log.w(TAG, "Activity should implement fragment's callback.");
        } else {
            callback = (Callback) activity;
        }

        if (!(activity instanceof OnScrollListener)) {
            Log.w(TAG, "Activity should implement OnScrollListener.");
        } else {
            onScrollListener = (OnScrollListener) activity;
        }
    }

    @Override
    public void onDetach() {
        super.onDetach();
        callback = null;
        onScrollListener = null;
        getListView().setOnScrollListener(onScrollListener);
    }

    @Override
    public void onListItemClick(final ListView listView, final View view, final int position, final long id) {
        super.onListItemClick(listView, view, position, id);

        if (callback != null) {
            callback.onItemSelected(position);
        }
    }

    @Override
    public void onSaveInstanceState(final Bundle outState) {
        super.onSaveInstanceState(outState);
        if (activatedPosition != ListView.INVALID_POSITION) {
            outState.putInt(STATE_ACTIVATED_POSITION, activatedPosition);
        }
    }

    public void setActivateOnItemClick(final boolean activateOnItemClick) {
        getListView().setChoiceMode(activateOnItemClick ? ListView.CHOICE_MODE_SINGLE : ListView.CHOICE_MODE_NONE);
    }

    private void setActivatedPosition(final int position) {
        if (position == ListView.INVALID_POSITION) {
            getListView().setItemChecked(activatedPosition, false);
        } else {
            getListView().setItemChecked(position, true);
        }
        activatedPosition = position;
    }
}
