package {{=packageName}};

import java.util.ArrayList;
import java.util.List;

import {{=topLevelPackage}}.application.Util;
import {{=sharedTopLevelPackage}}.managed.request.ApplicationRequestFactory;

import com.google.web.bindery.requestfactory.shared.Receiver;

import android.os.AsyncTask;
{{#imports}}
import {{=import}};{{/imports}}


public class {{=className}} extends AsyncTask<{{=idType}}, Void, List<{{=proxy}}>> {

    private static final int MAX_RESULTS = 10;

    private final {{=proxyListActivity}} activity;

    private final ApplicationRequestFactory requestFactory;

    private boolean new{{=name}} = false;

    public {{=className}}(final {{=proxyListActivity}} activity) {
        this.activity = activity;
        this.requestFactory = Util.getRequestFactory(activity, ApplicationRequestFactory.class);
    }

    @Override
    protected List<{{=proxy}}> doInBackground({{=idType}}... ids) {
        final List<{{=proxy}}> proxys = new ArrayList<{{=proxy}}>();
        if (ids.length == 0 || ids[0] == null) {
            requestFactory.{{=nameUncapitalized}}Request().find{{=name}}Entries(activity.getCount(), MAX_RESULTS).fire(new Receiver<List<{{=proxy}}>>() {
                @Override
                public void onSuccess(List<{{=proxy}}> response) {
                    proxys.addAll(response);
                }
            });
        } else {
            new{{=name}} = true;
            requestFactory.{{=nameUncapitalized}}Request().find{{=name}}(ids[0]).fire(new Receiver<{{=proxy}}>() {
                @Override
                public void onSuccess({{=proxy}} response) {
                    proxys.add(response);
                }
            });
        }
        return proxys;
    }

    @Override
    protected void onPostExecute(List<{{=proxy}}> result) {
        if (new{{=name}}) {
            activity.add{{=pluralName}}(result);
        } else {
            activity.set{{=pluralName}}(result);
        }
    }
}
